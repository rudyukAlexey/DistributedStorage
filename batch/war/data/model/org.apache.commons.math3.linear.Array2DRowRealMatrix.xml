<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<AgileJWebModel version="1.8.3.v20151019-2113">
    <type deep="true" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" fileNameKey="org.apache.commons.math3.linear.Array2DRowRealMatrix.xml" formalDisplayName="Array2DRowRealMatrix" isBinary="true" isClass="true" isDeprecated="false" isEnum="false" isInterface="false" isPrimitive="false" isTopLevel="true" javaProjectName="DistributedStorage" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix">
        <filters>
            <filter signature="all classes"/>
            <filter signature="all types"/>
            <filter signature="bytecode types"/>
            <filter signature="classes with a default constructor"/>
            <filter signature="concrete classes"/>
            <filter signature="inner types named {type-name}" switchValues="Array2DRowRealMatrix"/>
            <filter signature="members of package {package-name}" switchValues="org.apache.commons.math3.linear"/>
            <filter signature="non java star package types"/>
            <filter signature="public types"/>
            <filter signature="serializable types"/>
            <filter signature="top level types"/>
            <filter signature="types named {type-name-pattern}" switchValues="Array2DRowRealMatrix"/>
            <filter signature="types with static members"/>
        </filters>
        <outermostType>
            <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
        </outermostType>
        <field deep="true" elementName="serialVersionUID" fieldLineTooltipDescription="Array2DRowRealMatrix.serialVersionUID&#10;&#9;references one&#10;long" isBinary="true" isDeprecated="false" modelMemberIdentifier="field:org.apache.commons.math3.linear.Array2DRowRealMatrix.serialVersionUID" modifiers="final,private,static,">
            <filters>
                <filter signature="all fields"/>
                <filter signature="fields named {field-name-pattern}" switchValues="serialVersionUID"/>
                <filter signature="private fields"/>
                <filter signature="serial version uid fields"/>
                <filter signature="static fields"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <typeReference>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="long" elementName="long" formalDisplayName="long" modelMemberIdentifier="type:long" modifiers="" packageName="" qualifiedName="long"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="long" elementName="long" formalDisplayName="long" modelMemberIdentifier="type:long" modifiers="" packageName="" qualifiedName="long"/>
                    </containedType>
                </typeReference>
            </typeReference>
        </field>
        <field deep="true" elementName="data" fieldLineTooltipDescription="Array2DRowRealMatrix.data&#10;&#9;references many&#10;double[][]" isBinary="true" isDeprecated="false" modelMemberIdentifier="field:org.apache.commons.math3.linear.Array2DRowRealMatrix.data" modifiers="private,">
            <filters>
                <filter signature="all fields"/>
                <filter signature="fields named {field-name-pattern}" switchValues="data"/>
                <filter signature="one to many fields"/>
                <filter signature="private fields"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <typeReference>
                <typeReference arrayDimensions="2" many="true">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </typeReference>
        </field>
        <method deep="true" elementName="Array2DRowRealMatrix" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="constructors"/>
                <filter signature="default constructors"/>
                <filter signature="methods named {method-name-pattern}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overloaded methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="Array2DRowRealMatrix" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="constructors"/>
                <filter signature="methods named {method-name-pattern}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="non default constructors"/>
                <filter signature="overloaded methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <exceptions>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
            </exceptions>
            <parameter name="rowDimension">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="columnDimension">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="Array2DRowRealMatrix" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="constructors"/>
                <filter signature="methods named {method-name-pattern}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="non default constructors"/>
                <filter signature="overloaded methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <exceptions>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
            </exceptions>
            <parameter name="d">
                <typeReference arrayDimensions="2" many="true">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="Array2DRowRealMatrix" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="constructors"/>
                <filter signature="methods named {method-name-pattern}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="non default constructors"/>
                <filter signature="overloaded methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <exceptions>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
            </exceptions>
            <parameter name="arg0">
                <typeReference arrayDimensions="2" many="true">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="arg1">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="Array2DRowRealMatrix" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="constructors"/>
                <filter signature="methods named {method-name-pattern}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="non default constructors"/>
                <filter signature="overloaded methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <parameter name="arg0">
                <typeReference arrayDimensions="1" many="true">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="createMatrix" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="createMatrix"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <exceptions>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
            </exceptions>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="rowDimension">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="columnDimension">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="copy" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="copy"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                    </containedType>
                </typeReference>
            </return>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="add" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="add"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overloaded methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <exceptions>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
            </exceptions>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="arg0">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="subtract" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="subtract"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overloaded methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <exceptions>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
            </exceptions>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="arg0">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="multiply" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="multiply"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overloaded methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <exceptions>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
            </exceptions>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="arg0">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="getData" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="getter methods"/>
                <filter signature="methods named {method-name-pattern}" switchValues="getData"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <return>
                <typeReference arrayDimensions="2" many="true">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </return>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="getDataRef" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="getter methods"/>
                <filter signature="methods named {method-name-pattern}" switchValues="getDataRef"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <return>
                <typeReference arrayDimensions="2" many="true">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </return>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="setSubMatrix" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="setSubMatrix"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
                <filter signature="setter methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <exceptions>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
            </exceptions>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="arg0">
                <typeReference arrayDimensions="2" many="true">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="arg1">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="arg2">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="getEntry" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="getter methods"/>
                <filter signature="methods named {method-name-pattern}" switchValues="getEntry"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <exceptions>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
            </exceptions>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="row">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="column">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="setEntry" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="setEntry"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
                <filter signature="setter methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <exceptions>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
            </exceptions>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="row">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="column">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="value">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="addToEntry" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="addToEntry"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <exceptions>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
            </exceptions>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="row">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="column">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="increment">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="multiplyEntry" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="multiplyEntry"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <exceptions>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
            </exceptions>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="row">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="column">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="factor">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="getRowDimension" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="getter methods"/>
                <filter signature="methods named {method-name-pattern}" switchValues="getRowDimension"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </return>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="getColumnDimension" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="getter methods"/>
                <filter signature="methods named {method-name-pattern}" switchValues="getColumnDimension"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </return>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="operate" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="operate"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overloaded methods"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <exceptions>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
            </exceptions>
            <return>
                <typeReference arrayDimensions="1" many="true">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="arg0">
                <typeReference arrayDimensions="1" many="true">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="preMultiply" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="preMultiply"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overloaded methods"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <exceptions>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
            </exceptions>
            <return>
                <typeReference arrayDimensions="1" many="true">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="arg0">
                <typeReference arrayDimensions="1" many="true">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="walkInRowOrder" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="walkInRowOrder"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overloaded methods"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="arg0">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="walkInRowOrder" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="walkInRowOrder"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overloaded methods"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="arg0">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="walkInRowOrder" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="walkInRowOrder"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overloaded methods"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <exceptions>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
            </exceptions>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="arg0">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="arg1">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="arg2">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="arg3">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="arg4">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="walkInRowOrder" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="walkInRowOrder"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overloaded methods"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <exceptions>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
            </exceptions>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="arg0">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="arg1">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="arg2">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="arg3">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="arg4">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="walkInColumnOrder" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="walkInColumnOrder"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overloaded methods"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="arg0">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="walkInColumnOrder" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="walkInColumnOrder"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overloaded methods"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="arg0">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="walkInColumnOrder" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="walkInColumnOrder"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overloaded methods"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <exceptions>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
            </exceptions>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="arg0">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="arg1">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="arg2">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="arg3">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="arg4">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="walkInColumnOrder" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="walkInColumnOrder"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="overloaded methods"/>
                <filter signature="overriding methods"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <exceptions>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
            </exceptions>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="arg0">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="arg1">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="arg2">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="arg3">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <parameter name="arg4">
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="copyOut" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="copyOut"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="private methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <return>
                <typeReference arrayDimensions="2" many="true">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </return>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <method deep="true" elementName="copyIn" isBinary="true" isDeprecated="false" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="all operations"/>
                <filter signature="methods named {method-name-pattern}" switchValues="copyIn"/>
                <filter signature="methods of {method-owner}" switchValues="Array2DRowRealMatrix"/>
                <filter signature="private methods"/>
            </filters>
            <declarer>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
            </declarer>
            <exceptions>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
            </exceptions>
            <return>
                <typeReference arrayDimensions="0" many="false">
                    <rawType>
                        <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                    </containedType>
                </typeReference>
            </return>
            <parameter name="in">
                <typeReference arrayDimensions="2" many="true">
                    <rawType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </rawType>
                    <containedType>
                        <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                    </containedType>
                </typeReference>
            </parameter>
            <calledMethods>
                <method deep="false" elementName="subtract" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="add" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.MatrixDimensionMismatchException" elementName="MatrixDimensionMismatchException" formalDisplayName="MatrixDimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.linear.MatrixDimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.MatrixDimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="addToEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="increment">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setSubMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.Array2DRowRealMatrix" elementName="Array2DRowRealMatrix" formalDisplayName="Array2DRowRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" modifiers="public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getData" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getRowDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="getColumnDimension" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="operate" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="getDataRef" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInRowOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="preMultiply" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyOut" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" modifiers="private,">
                    <return>
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixPreservingVisitor" elementName="RealMatrixPreservingVisitor" formalDisplayName="RealMatrixPreservingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixPreservingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixPreservingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="walkInColumnOrder" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NumberIsTooSmallException" elementName="NumberIsTooSmallException" formalDisplayName="NumberIsTooSmallException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NumberIsTooSmallException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrixChangingVisitor" elementName="RealMatrixChangingVisitor" formalDisplayName="RealMatrixChangingVisitor" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrixChangingVisitor" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrixChangingVisitor"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg2">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg3">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg4">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="setEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="value">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" modifiers="public,"/>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" modifiers="public,">
                    <parameter name="arg0">
                        <typeReference arrayDimensions="1" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="arg0">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="arg1">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="boolean" elementName="boolean" formalDisplayName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="Array2DRowRealMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <parameter name="d">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="multiplyEntry" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.OutOfRangeException" elementName="OutOfRangeException" formalDisplayName="OutOfRangeException" modelMemberIdentifier="type:org.apache.commons.math3.exception.OutOfRangeException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.OutOfRangeException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="row">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="column">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="factor">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copyIn" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" modifiers="private,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.DimensionMismatchException" elementName="DimensionMismatchException" formalDisplayName="DimensionMismatchException" modelMemberIdentifier="type:org.apache.commons.math3.exception.DimensionMismatchException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.DimensionMismatchException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NoDataException" elementName="NoDataException" formalDisplayName="NoDataException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NoDataException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NoDataException"/>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NullArgumentException" elementName="NullArgumentException" formalDisplayName="NullArgumentException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NullArgumentException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NullArgumentException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="void" elementName="void" formalDisplayName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="in">
                        <typeReference arrayDimensions="2" many="true">
                            <rawType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="double" elementName="double" formalDisplayName="double" modelMemberIdentifier="type:double" modifiers="" packageName="" qualifiedName="double"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="createMatrix" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <exceptions>
                        <type deep="false" displayTextTemplate="org.apache.commons.math3.exception.NotStrictlyPositiveException" elementName="NotStrictlyPositiveException" formalDisplayName="NotStrictlyPositiveException" modelMemberIdentifier="type:org.apache.commons.math3.exception.NotStrictlyPositiveException" modifiers="public," packageName="org.apache.commons.math3.exception" qualifiedName="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
                    </exceptions>
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                    <parameter name="rowDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                    <parameter name="columnDimension">
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="int" elementName="int" formalDisplayName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                            </containedType>
                        </typeReference>
                    </parameter>
                </method>
                <method deep="false" elementName="copy" modelMemberIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" modifiers="public,">
                    <return>
                        <typeReference arrayDimensions="0" many="false">
                            <rawType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </rawType>
                            <containedType>
                                <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
                            </containedType>
                        </typeReference>
                    </return>
                </method>
            </calledMethods>
        </method>
        <nonRecursiveSubtypes/>
        <recursiveSubtypes/>
        <nonRecursiveSupertypes>
            <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.AbstractRealMatrix" elementName="AbstractRealMatrix" formalDisplayName="AbstractRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.AbstractRealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.AbstractRealMatrix"/>
            <type deep="false" displayTextTemplate="java.io.Serializable" elementName="Serializable" formalDisplayName="Serializable" modelMemberIdentifier="type:java.io.Serializable" modifiers="abstract,public," packageName="java.io" qualifiedName="java.io.Serializable"/>
        </nonRecursiveSupertypes>
        <recursiveSupertypes>
            <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealLinearOperator" elementName="RealLinearOperator" formalDisplayName="RealLinearOperator" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealLinearOperator" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealLinearOperator"/>
            <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.AbstractRealMatrix" elementName="AbstractRealMatrix" formalDisplayName="AbstractRealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.AbstractRealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.AbstractRealMatrix"/>
            <type deep="false" displayTextTemplate="java.io.Serializable" elementName="Serializable" formalDisplayName="Serializable" modelMemberIdentifier="type:java.io.Serializable" modifiers="abstract,public," packageName="java.io" qualifiedName="java.io.Serializable"/>
            <type deep="false" displayTextTemplate="java.lang.Object" elementName="Object" formalDisplayName="Object" modelMemberIdentifier="type:java.lang.Object" modifiers="public," packageName="java.lang" qualifiedName="java.lang.Object"/>
            <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.RealMatrix" elementName="RealMatrix" formalDisplayName="RealMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.RealMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.RealMatrix"/>
            <type deep="false" displayTextTemplate="org.apache.commons.math3.linear.AnyMatrix" elementName="AnyMatrix" formalDisplayName="AnyMatrix" modelMemberIdentifier="type:org.apache.commons.math3.linear.AnyMatrix" modifiers="abstract,public," packageName="org.apache.commons.math3.linear" qualifiedName="org.apache.commons.math3.linear.AnyMatrix"/>
        </recursiveSupertypes>
        <outwardDependencies/>
    </type>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAABx0lEQVR4nOWU3yuDYRTH98e49SNqJTUSr0zaWtpGtjaWMWRujNm0lzGyzI/CWDNLKLXwJhOmKNqFSC5GJhThhrlx+fU+z7IkF6+59K3Tec7znD6dc97nfUSibzq+O4fG346KcR3yB+SQjmppTPa/5woWuzFOYY0LbbCEOlNG4rzeSpDztKC5jjKwnB2rpyvYv9rD4fUB9YGjWTg4BzI6JL+DkzZJpV0hCyKX2/hJOxdb6F6z0soFj6Vm1gx9wIi5o5kUaDu2ibGIG9zZKo1vX27gCvfTvPqgRRiY8WihmNTCfzhPIVfPcej8DSlrXTTDGDRRq/bqQfIFgUl7OT0MPJFkxQfxKLLspci0lVAj6zy2HGKnFJJBGb+uEF5xgUvG3wAXBd+93KNwSAGJS04tGA1h5YSD2teKMo9aeMVkZpJBObQ+ExLvb8mPFdtH85IVI7vJLl7fE9Dw54pJHVqWWWHg2FOcXqWqKT1/M1hc8jP+qofEI9w7E1B7DTTvVz9LDzeKLBsDZkQFXaAJtnUn+sNu6kms4qHiPhlInmDoV3i2neHbrYNyxgAlDyOexGQ/LeinSJtV0yYUDalRPFxDfa3vj2/F/9YHYK+OD5EVjdEAAAAASUVORK5CYII=" height="16" modelElementIdentifier="type:org.apache.commons.math3.linear.Array2DRowRealMatrix" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAMklEQVR4nGNgGAWjgGhww8n/PzqmmsGPyxv+gwCIpqrByIAmLn7eMYG6BtMkjEfB4AcAIhZF9iVxU3wAAAAASUVORK5CYII=" height="16" modelElementIdentifier="field:org.apache.commons.math3.linear.Array2DRowRealMatrix.data" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAiElEQVR4nGNgIAL8B4IPe47/P86kC8YgNgjA5DSSpv0Prl8CxiA2TI4og0EGwgCMDZMDGYgOyDIYWTO6wUQZSGpQgGiSDUYG+IKCZIOJCWOiDLvh5P8fhkHgWe8CeFCA2OhBQZLBj8sbwBpANIhPkjfxGYwMqGowzMXPOyZQ12B0TBWDR8HgBwDoDS/D0GPxBAAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="field:org.apache.commons.math3.linear.Array2DRowRealMatrix.serialVersionUID" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAA6ElEQVR4nGNgoBD8BwL99V7/FatM/ivVmf7f/fbof0rNBAOHbZFwA/sfLgCzqWowMhgaBhMdFKXbJ/xnbfT8rzc14T+IjUsdSZHnu7j4f/yqkv9bLs39P+PYBDAbJIbPcILBULit93/Y8oL/q8/PRMIzwGIgObzexAeYGzz+N+1t+t+yrwWB97eAxUByZBss2xP2P2kV0HUby6C4FEyDxEByZBucsq71v/2M+P8dOxv/d+xo/N8JxCC2/fSE/yA5sg0GAec5Of+9Zqf+n76343/T1nowGyRGkaEwkL+xC57cQGyqGDoyAQA+++MipdXKzwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(()V)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAA6ElEQVR4nGNgoBD8BwL99V7/FatM/ivVmf7f/fbof0rNBAOHbZFwA/sfLgCzqWowMhgaBhMdFKXbJ/xnbfT8rzc14T+IjUsdSZHnu7j4f/yqkv9bLs39P+PYBDAbJIbPcILBULit93/Y8oL/q8/PRMIzwGIgObzexAeYGzz+N+1t+t+yrwWB97eAxUByZBss2xP2P2kV0HUby6C4FEyDxEByZBucsq71v/2M+P8dOxv/d+xo/N8JxCC2/fSE/yA5sg0GAec5Of+9Zqf+n76343/T1nowGyRGkaEwkL+xC57cQGyqGDoyAQA+++MipdXKzwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix((II)V)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAA6ElEQVR4nGNgoBD8BwL99V7/FatM/ivVmf7f/fbof0rNBAOHbZFwA/sfLgCzqWowMhgaBhMdFKXbJ/xnbfT8rzc14T+IjUsdSZHnu7j4f/yqkv9bLs39P+PYBDAbJIbPcILBULit93/Y8oL/q8/PRMIzwGIgObzexAeYGzz+N+1t+t+yrwWB97eAxUByZBss2xP2P2kV0HUby6C4FEyDxEByZBucsq71v/2M+P8dOxv/d+xo/N8JxCC2/fSE/yA5sg0GAec5Of+9Zqf+n76343/T1nowGyRGkaEwkL+xC57cQGyqGDoyAQA+++MipdXKzwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[D)V)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAA6ElEQVR4nGNgoBD8BwL99V7/FatM/ivVmf7f/fbof0rNBAOHbZFwA/sfLgCzqWowMhgaBhMdFKXbJ/xnbfT8rzc14T+IjUsdSZHnu7j4f/yqkv9bLs39P+PYBDAbJIbPcILBULit93/Y8oL/q8/PRMIzwGIgObzexAeYGzz+N+1t+t+yrwWB97eAxUByZBss2xP2P2kV0HUby6C4FEyDxEByZBucsq71v/2M+P8dOxv/d+xo/N8JxCC2/fSE/yA5sg0GAec5Of+9Zqf+n76343/T1nowGyRGkaEwkL+xC57cQGyqGDoyAQA+++MipdXKzwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([[DZ)V)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAA6ElEQVR4nGNgoBD8BwL99V7/FatM/ivVmf7f/fbof0rNBAOHbZFwA/sfLgCzqWowMhgaBhMdFKXbJ/xnbfT8rzc14T+IjUsdSZHnu7j4f/yqkv9bLs39P+PYBDAbJIbPcILBULit93/Y8oL/q8/PRMIzwGIgObzexAeYGzz+N+1t+t+yrwWB97eAxUByZBss2xP2P2kV0HUby6C4FEyDxEByZBucsq71v/2M+P8dOxv/d+xo/N8JxCC2/fSE/yA5sg0GAec5Of+9Zqf+n76343/T1nowGyRGkaEwkL+xC57cQGyqGDoyAQA+++MipdXKzwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.Array2DRowRealMatrix(([D)V)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.add((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry((IID)V)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copy(()Lorg/apache/commons/math3/linear/RealMatrix;)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAdklEQVR4nGNgGAWjgChw0t3uPy5MmcHONv+/TerDwCBxygy2swIb9LWmBo7BBgPFKTL4hIHJ/69lDf8/+sb8/wTEIBrEB4lTZrCm4f+3zc3/nyckAHEiGIP4JzQNKDRYVuf/88ndGBgkTpnBklr/cWGKDB6ZAABi/X0KTJJ1eQAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(([[D)V)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAdklEQVR4nGNgGAWjgChw0t3uPy5MmcHONv+/TerDwCBxygy2swIb9LWmBo7BBgPFKTL4hIHJ/69lDf8/+sb8/wTEIBrEB4lTZrCm4f+3zc3/nyckAHEiGIP4JzQNKDRYVuf/88ndGBgkTpnBklr/cWGKDB6ZAABi/X0KTJJ1eQAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut(()[[D)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix((II)Lorg/apache/commons/math3/linear/RealMatrix;)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(()I)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getData(()[[D)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef(()[[D)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((II)D)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(()I)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry((IID)V)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(([D)[D)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply(([D)[D)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((IID)V)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(([[DII)V)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract((Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder((Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D)" width="22"/>
</AgileJWebModel>
